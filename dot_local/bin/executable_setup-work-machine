#!/usr/bin/env bash
# Setup work machine configuration
# This script fixes the machine type to 'work' and installs pre-commit hooks

set -euo pipefail

# Colors
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

info() {
    echo -e "${BLUE}ℹ${NC} $1"
}

success() {
    echo -e "${GREEN}✓${NC} $1"
}

warn() {
    echo -e "${YELLOW}⚠${NC} $1"
}

error() {
    echo -e "${RED}✗${NC} $1"
    exit 1
}

main() {
    echo ""
    echo -e "${BLUE}╔════════════════════════════════════════════════════════════╗${NC}"
    echo -e "${BLUE}║                                                            ║${NC}"
    echo -e "${BLUE}║          Work Machine Setup                               ║${NC}"
    echo -e "${BLUE}║                                                            ║${NC}"
    echo -e "${BLUE}╚════════════════════════════════════════════════════════════╝${NC}"
    echo ""

    # Step 1: Set machine type to work
    info "Setting machine type to work..."
    if chezmoi state set --bucket "install" --key "machine_type" --value "work"; then
        success "Machine type set to work"
    else
        error "Failed to set machine type"
    fi

    # Step 2: Apply dotfiles to update git config
    info "Applying dotfiles to update git configuration..."
    if chezmoi apply --force; then
        success "Dotfiles applied"
    else
        error "Failed to apply dotfiles"
    fi

    # Step 3: Verify git email
    echo ""
    info "Verifying git configuration..."
    git_email=$(git config user.email)
    if [[ "$git_email" == *"@draftkings.com" ]] || [[ "$git_email" == "bfay@draftkings.com" ]]; then
        success "Git email configured for work: $git_email"
    else
        warn "Git email is still set to: $git_email"
        warn "You may need to manually update: git config user.email <work-email>"
    fi

    # Step 4: Offer to install pre-commit on existing repos
    echo ""
    read -p "Do you want to install pre-commit hooks on existing repositories? (y/n) " -n 1 -r
    echo ""
    if [[ $REPLY =~ ^[Yy]$ ]]; then
        info "Installing pre-commit on existing repositories..."

        # Find all .git directories in common locations
        local repos_found=0
        while IFS= read -r git_dir; do
            local repo_path=$(dirname "$git_dir")
            echo ""
            info "Installing pre-commit in: $repo_path"
            if (cd "$repo_path" && pre-commit install 2>/dev/null); then
                success "Pre-commit installed in $repo_path"
                ((repos_found++))
            else
                warn "Could not install pre-commit in $repo_path"
            fi
        done < <(find ~ -path '*/.git' -prune -type d 2>/dev/null | head -20)

        if [[ $repos_found -gt 0 ]]; then
            echo ""
            success "Pre-commit installed in $repos_found repositories"
        else
            warn "No repositories found, you can manually run:"
            echo "    cd <repo> && pre-commit install"
        fi
    fi

    echo ""
    echo -e "${GREEN}╔════════════════════════════════════════════════════════════╗${NC}"
    echo -e "${GREEN}║                                                            ║${NC}"
    echo -e "${GREEN}║  ✓ Work machine setup complete!                          ║${NC}"
    echo -e "${GREEN}║                                                            ║${NC}"
    echo -e "${GREEN}╚════════════════════════════════════════════════════════════╝${NC}"
    echo ""
    echo "Your machine is now configured for work with:"
    echo "  • Work git email: bfay@draftkings.com"
    echo "  • Pre-commit hooks for code quality"
    echo ""
}

main
